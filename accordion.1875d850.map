{"version":3,"sources":["exercises/accordion/accordion.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["accordionComponent","accordionElement","document","querySelector","init","accordionTerms","querySelectorAll","forEach","term","backButton","addEventListener","history","back","e","toggleContent","target","code","element","termContent","nextElementSibling","classList","contains","removeActiveTerm","toggle","activeTerm","remove","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","i","length","module"],"mappings":"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","file":"accordion.1875d850.map","sourceRoot":"..","sourcesContent":["import './accordion.scss';\n\nconst accordionComponent = () => {\n\n  // Define the root element that is used from different functions, usign data attributes\n  // JS hooks from CSS classes.\n  const accordionElement = document.querySelector('[data-accordion]');\n\n  const init = () => {\n    // Initialise the eventHandlers.\n    const accordionTerms = accordionElement.querySelectorAll('[data-accordionTerm]');\n\n    accordionTerms.forEach(term => {\n      const backButton = accordionElement.querySelector('[data-accordionBack]');\n\n      backButton.addEventListener('click', () => history.back(-1));\n      term.addEventListener('click', (e) => toggleContent(e.target));\n      term.addEventListener('keypress', (e) => {\n        // If the key pressed is not Enter or Space, we won't trigger the toggle.\n        if (e.code !== 'Enter' && e.code !== 'Space') { return }\n        toggleContent(e.target);\n      });\n    });\n  }\n\n  const toggleContent = (element) => {\n    const termContent = element.nextElementSibling;\n\n    // in case the selected element is already active, we can assume we don't need to remove other\n    // active elements\n    if (!element.classList.contains('Accordion-term--active')) {\n      removeActiveTerm();\n    }\n\n    element.classList.toggle(`Accordion-term--active`);\n    termContent.classList.toggle(`Accordion-termContent--visible`);\n  }\n\n  const removeActiveTerm = () => {\n    const activeTerm = accordionElement.querySelector('.Accordion-term--active');\n    \n    // in order to avoid unnecessary logic and keep identation to the minimum, we check and return\n    // if there is no active element. Otherwise we go through the logic and remove the classes.\n    if (!activeTerm) { return }\n    const termContent = activeTerm.nextElementSibling;\n    \n    activeTerm.classList.remove(`Accordion-term--active`);\n    termContent.classList.remove('Accordion-termContent--visible');\n  }\n  \n  init();\n};\n\n// We initialise the Accordion logic once we have the HTML in place.\ndocument.addEventListener(`DOMContentLoaded`, () => accordionComponent());\n\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}